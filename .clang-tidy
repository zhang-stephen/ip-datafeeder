---
# >- means following string
Checks: >-
  -*,
  bugprone-assignment-in-if-condition,
  bugprone-bool-pointer-implicit-conversion,
  bugprone-branch-clone,
  bugprone-copy-constructor-init,
  bugprone-dynamic-static-initializers,
  bugprone-exception-escape,
  bugprone-fold-init-type,
  bugprone-forward-declaration-namespace,
  bugprone-forwarding-reference-overload,
  bugprone-incorrect-roundings,
  bugprone-infinite-loop,
  bugprone-integer-division,
  bugprone-lambda-function-name,
  bugprone-macro-parentheses,
  bugprone-macro-repeated-side-effects,
  bugprone-misplaced-operator-in-strlen-in-alloc,
  bugprone-misplaced-pointer-arithmetic-in-alloc,
  bugprone-misplaced-widening-cast,
  bugprone-move-forwarding-reference,
  bugprone-multiple-statement-macro,
  bugprone-not-null-terminated-result,
  bugprone-parent-virtual-call,
  bugprone-posix-return,
  bugprone-redundant-branch-condition,
  bugprone-reserved-identifier,
  bugprone-shared-ptr-array-mismatch,
  bugprone-signed-char-misuse,
  bugprone-sizeof-container,
  bugprone-sizeof-expression,
  bugprone-spuriously-wake-up-functions,
  bugprone-string-constructor,
  bugprone-string-integer-assignment,
  bugprone-string-literal-with-embedded-nul,
  bugprone-stringview-nullptr,
  bugprone-suspicious-enum-usage,
  bugprone-suspicious-include,
  bugprone-suspicious-memory-comparison,
  bugprone-suspicious-memset-usage,
  bugprone-suspicious-missing-comma,
  bugprone-suspicious-semicolon,
  bugprone-suspicious-string-compare,
  bugprone-swapped-arguments,
  bugprone-terminating-continue,
  bugprone-throw-keyword-missing,
  bugprone-too-small-loop-variable,
  bugprone-unchecked-optional-access,
  bugprone-undefined-memory-manipulation,
  bugprone-undelegated-constructor,
  bugprone-unhandled-exception-at-new,
  bugprone-unhandled-self-assignment,
  bugprone-unused-raii,
  bugprone-unused-return-value,
  bugprone-use-after-move,
  bugprone-virtual-near-miss,
  readability-*,
  cppcoreguidelines-*,
  -cppcoreguidelines-avoid-non-const-global-variables,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  modernize-*,
  -modernize-avoid-c-arrays,
  -modernize-use-trailing-return-type,
  misc-*,
  -misc-non-private-member-variables-in-classes,
  performance-*
WarningsAsErrors: false
FormatStyle: file
User: developer
CheckOptions:
    - key: bugprone-misplaced-widening-cast.CheckImplicitCasts
      value: true
    - key: readability-braces-around-statements.ShortStatementLines
      value: 2
    - key: readability-identifier-length.MinimumVariableNameLength
      value: 1
    - key: readability-identifier-length.MinimumParameterNameLength
      value: 1
    - key: readability-identifier-length.MinimumLoopCounterNameLength
      value: 1
    - key: readability-identifier-naming.AbstractClassCase
      value: CamelCase
    - key: readability-identifier-naming.AggressiveDependentMemberLookup
      value: true
    - key: readability-identifier-naming.ClassCase
      value: CamelCase
    - key: readability-identifier-naming.ClassConstantCase
      value: camelBack
    - key: readability-identifier-naming.ClassConstantPrefix
      value: ''
    - key: readability-identifier-naming.ClassConstantSuffix
      value: '_'
    - key: readability-identifier-naming.ConstantCase
      value: UPPER_CASE
    - key: readability-identifier-naming.EnumCase
      value: CamelCase
    - key: readability-identifier-naming.EnumConstantCase
      value: CamelCase
    - key: readability-identifier-naming.FunctionCase
      value: camelBack
    - key: readability-identifier-naming.GlobalConstantCase
      value: UPPER_CASE
    - key: readability-identifier-naming.GlobalFunctionCase
      value: camelBack
    - key: readability-identifier-naming.GlobalVariableCase
      value: camelBack
    - key: readability-identifier-naming.GlobalVariablePrefix
      value: 'g_'
    - key: readability-identifier-naming.LocalConstantCase
      value: camelBack
    - key: readability-identifier-naming.LocalVariableCase
      value: camelBack
    - key: readability-identifier-naming.MacroDefinitionCase
      value: UPPER_CASE
    - key: readability-identifier-naming.MemberCase
      value: camelBack
    - key: readability-identifier-naming.MemberSuffix
      value: '_'
    - key: readability-identifier-naming.MethodCase
      value: camelBack
    - key: readability-identifier-naming.NamespaceCase
      value: lower_case
    - key: readability-identifier-naming.ParameterCase
      value: camelBack
    - key: readability-identifier-naming.StaticConstantPrefix
      value: ''
    - key: readability-identifier-naming.StaticVariableCase
      value: camelBack
    - key: readability-identifier-naming.StructCase
      value: CamelCase
    - key: readability-identifier-naming.TemplateParameterCase
      value: CamelCase
    - key: readability-identifier-naming.TypeAliasCase
      value: CamelCase
    - key: readability-identifier-naming.TypedefCase
      value: CamelCase
    - key: readability-identifier-naming.UnionCase
      value: CamelCase
    - key: readability-identifier-naming.VariableCase
      value: camelBack
    - key: readability-uniqueptr-delete-release.PreferResetCall
      value: true
    # - key: cppcoreguidelines-avoid-do-while.IgnoreMacros # TODO: invalid in LLVM 15
    #   value: true
    - key: cppcoreguidelines-macro-usage.AllowedRegexp
      value: ^IPDF_(LOG|ASSERT)*
    - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
      value: true
    - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctionsWhenCopyIsDeleted
      value: true
